/*[Me...]:
She tells him, "Ooh,love no one's"
Ever gonna hurt you,love".
*/
#include <bits/stdc++.h>
using namespace std;
#ifndef ONLINE_JUDGE
#define check(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define check(x)
#endif
void _print(long long  t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T> void _print(unordered_set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T, class V> void _print(unordered_map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(unordered_multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
#define M 1000000007
long long  binexp1(int a, int b) {
	long long res = 1;while(b){
		b&1 ? (res=(res*a)%M ) ,b-- : (b/=2,a=(a*a)%M);
	}
    return res;
}
long long  binexp(int a, int b){
    long long res = 1; while(b){
        b&1 ? (res*=a,b--) : (b/=2,a*=a) ;
    }return res;
}
int gcd(int a , int b){
	return b!=0 ? gcd(b,a%b) : a ;
}
int bins(vector<int> &v , int el , bool sf){
	int lo = 0 , hi = v.size()-1;
	int mid;
	while(hi - lo > 1){
		mid = lo + (hi-lo)/2;
		if(v[mid] < el){
			lo = mid+1;
		}
		if(v[mid] > el){
			hi = mid-1;
		}
		if(v[mid] == el){
			sf ? (hi = mid ) : (lo = mid);
		}
	}
	if(v[lo] != el && v[hi] != el){
		return -1;
	}
	if(sf){
		if(v[lo] == el){
			return lo ;
		}
		return hi;
	}
	else{
		if(v[hi] == el){
			return hi;
		}
		return lo;
	}
}
void solve(){
	int n ; std:: cin>> n;
	vector<int> v;
	for(int i = 0 ; i < n ; i++){
		int x; cin>>x;
		v.push_back(x);
	}
	int el ; cin>> el;
	if(bins(v,el,true)==-1){
		cout << 0 ;return;
	}
	cout << (bins(v,el,false) - bins(v,el,true) + 1);
}
int main(){
#ifndef ONLINE_JUDGE
    freopen("input1.text" , "r" , stdin);
    freopen("output1.text" , "w" , stdout);
#endif
#ifndef ONLINE_JUDGE
    freopen("debug.text" , "w" , stderr);
#endif
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int t ;
    t = 1;
    // cin>>t;
    while(t--){
        solve();
    }
}
